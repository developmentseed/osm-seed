{{- range $i, $job := .Values.dbBackupRestore.cronjobs }}
{{- if $job.enabled -}}
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ $.Release.Name }}-{{ $job.name }}-backup-job
  labels:
    component: {{ $job.name }}-job
    component: db-pd
    environment: {{ $.Values.environment }}
    release: {{ $.Release.Name }}
spec:
  schedule: {{ quote $job.schedule }}
  successfulJobsHistoryLimit: 2
  failedJobsHistoryLimit: 2
  startingDeadlineSeconds: 100
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: {{ $job.name }}-backup-job
            image: {{ $.Values.dbBackupRestore.image.name }}:{{ $.Values.dbBackupRestore.image.tag }}
            command: ['/start.sh']
            env:
            # Env vars for api-web database
            {{ if eq $job.name "web-db" }}
              - name: POSTGRES_HOST
                value: {{ $.Release.Name }}-db
              - name: POSTGRES_DB
                value: {{ $.Values.db.env.POSTGRES_DB }}
              - name: POSTGRES_PASSWORD
                value: {{ quote $.Values.db.env.POSTGRES_PASSWORD }}
              - name: POSTGRES_USER
                value: {{ $.Values.db.env.POSTGRES_USER }}
              - name: DB_ACTION
                value: {{ $job.env.DB_ACTION }}
              - name: RESTORE_URL_FILE
                value: {{ $job.env.RESTORE_URL_FILE}}
              - name: CLEAN_BACKUPS
                value: {{ quote $job.env.CLEAN_BACKUPS }}
            {{- end }}
            # Env vars for osmcha database
            {{ if eq $job.name "osmcha-db" }}
              - name: POSTGRES_HOST
                value: {{ $.Release.Name }}-osmcha-db
              - name: POSTGRES_DB
                value: {{ $.Values.osmchaDb.env.POSTGRES_DB }}
              - name: POSTGRES_PASSWORD
                value: {{ quote $.Values.osmchaDb.env.POSTGRES_PASSWORD }}
              - name: POSTGRES_USER
                value: {{ $.Values.osmchaDb.env.POSTGRES_USER }}
              - name: DB_ACTION
                value: {{ $job.env.DB_ACTION }}
              - name: RESTORE_URL_FILE
                value: {{ $job.env.RESTORE_URL_FILE}}
              - name: CLEAN_BACKUPS
                value: {{ quote $job.env.CLEAN_BACKUPS }}
            {{- end }}
              # Cloud provider
              - name: CLOUDPROVIDER
                value: {{ $.Values.cloudProvider }}
              # Credentials or configurations for each cloud provider
            {{- if eq $.Values.cloudProvider "aws" }}
              - name: AWS_S3_BUCKET
                value: {{ $.Values.dbBackupRestore.env.AWS_S3_BUCKET }}
            {{- end }}
            {{- if eq $.Values.cloudProvider "gcp" }}
              - name: GCP_STORAGE_BUCKET
                value: {{ $.Values.GCP_STORAGE_BUCKET }}
            {{- end }}
            {{- if eq $.Values.cloudProvider "azure" }}
              - name: AZURE_STORAGE_ACCOUNT
                value: {{ $.Values.AZURE_STORAGE_ACCOUNT }}
              - name: AZURE_CONTAINER_NAME
                value: {{ $.Values.AZURE_CONTAINER_NAME }}
              - name: AZURE_STORAGE_CONNECTION_STRING
                value: {{ $.Values.AZURE_STORAGE_CONNECTION_STRING }}
            {{- end }}
            # Node selector
            {{- if $job.resources.enabled }}
            resources:
              requests:
                memory: {{ $job.resources.requests.memory }}
                cpu: {{ $job.resources.requests.cpu }}
              limits:
                memory: {{ $job.resources.limits.memory }}
                cpu: {{ $job.resources.limits.cpu }}
            {{- end }}
          restartPolicy: OnFailure
{{- end }}
{{- end }}
