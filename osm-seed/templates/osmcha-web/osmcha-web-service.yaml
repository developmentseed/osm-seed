{{- if .Values.osmchaWeb.enabled -}}
apiVersion: v1
kind: Service
metadata:
  name: {{ template "osm-seed.fullname" . }}-osmcha-web
  labels:
    app: {{ template "osm-seed.name" . }}
    component: osmcha-web-service
    environment: {{ .Values.environment }}
    release: {{ .Release.Name }}
  annotations:
    {{- if and (eq .Values.serviceType "LoadBalancer") .Values.AWS_SSL_ARN }}
    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: {{ .Values.AWS_SSL_ARN }}
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: http
    service.beta.kubernetes.io/aws-load-balancer-ssl-ports: https    
    {{- end }}
    {{- if eq .Values.serviceType "ClusterIP" }}
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod-issuer
    {{- else }}
    fake.annotation: fake
    {{- end }}
    {{- with .Values.osmchaWeb.serviceAnnotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  type: {{ .Values.serviceType }}
  ports:
    - port: 80
      targetPort: 5000
      protocol: TCP
      name: http
  {{- if and (eq .Values.serviceType "LoadBalancer") .Values.AWS_SSL_ARN }}
    - port: 443
      targetPort: 5000
      protocol: TCP
      name: https
  {{- end }}
  selector:
    app: {{ template "osm-seed.name" . }}
    release: {{ .Release.Name }}
    run: {{ .Release.Name }}-osmcha-web
{{- end }}