{{- if .Values.osmchaApi.enabled -}}
apiVersion: v1
kind: Service
metadata:
  name: {{ template "osm-seed.fullname" . }}-osmcha-app
  labels:
    app: {{ template "osm-seed.name" . }}
    component: osmcha-app-service
    environment: {{ .Values.environment }}
    release: {{ .Release.Name }}
  annotations:
    {{- if and (eq .Values.serviceType "LoadBalancer") .Values.AWS_SSL_ARN }}
    # service.beta.kubernetes.io/aws-load-balancer-ssl-cert: {{ .Values.AWS_SSL_ARN }}
    # service.beta.kubernetes.io/aws-load-balancer-backend-protocol: http
    # service.beta.kubernetes.io/aws-load-balancer-ssl-ports: https
    meta.helm.sh/release-name: dev
    meta.helm.sh/release-namespace: default
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: http
    service.beta.kubernetes.io/aws-load-balancer-connection-idle-timeout: "300"
    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: arn:aws:acm:us-east-1:618380242247:certificate/9bc4e15c-2652-47ed-bfa8-3e078d708b87
    service.beta.kubernetes.io/aws-load-balancer-ssl-ports: https
    {{- end }}
    {{- if eq .Values.serviceType "ClusterIP" }}
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod-issuer
    {{- else }}
    fake.annotation: fake
    {{- end }}
    {{- with .Values.osmchaApi.serviceAnnotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  type: {{ .Values.serviceType }}
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
      name: http
  {{- if and (eq .Values.serviceType "LoadBalancer") .Values.AWS_SSL_ARN }}
    - port: 443
      targetPort: 80
      protocol: TCP
      name: https
  {{- end }}
  selector:
    app: {{ template "osm-seed.name" . }}
    release: {{ .Release.Name }}
    run: {{ .Release.Name }}-osmcha-app
{{- end }}

