# ====================================================================================================
# ====================================================================================================
# ==================================Global Configurations=============================================
# ====================================================================================================
# ====================================================================================================
# The version of the image group in osm-seed, get it here: https://hub.docker.com/r/developmentseed/osmseed-web/tags/
osmSeedVersion: develop-9302179
environment: development
# cloudProvider is provider where you are going to deploy osm-seed, it could be: aws, gcp, azure, minikube
cloudProvider: minikube

# ====================================================================================================
# AWS: In case you are using the cloudProvider=aws set the below variables, We are assuming the nodes has a policies access to S3
# ====================================================================================================
AWS_S3_BUCKET: s3://osm-seed

# ====================================================================================================
# GCP: In case you are using the cloudProvider=gcp set the below variables, We are assuming the nodes has a policies to upload files to cloud storage 
# ====================================================================================================
GCP_STORAGE_BUCKET: gs://osm-seed-test

# ====================================================================================================
# AZURE: In case you are using the cloudProvider=azure set the below variables
# ====================================================================================================
AZURE_STORAGE_ACCOUNT: osmseed
AZURE_CONTAINER_NAME: osm-seed
AZURE_STORAGE_CONNECTION_STRING: xyz..

# ====================================================
# AWS: Specify ARN for SSL certificate, currently assumes a single wildcard cert
# ====================================================

AWS_SSL_ARN: false

# Specify serviceType.
#
# serviceType can be one of three values: 'NodePort', 'ClusterIP' or 'LoadBalancer'
# Use `NodePort` for local testing on minikube.
#
# The recommended setting is `ClusterIP`, and then following the instructions to
# point a DNS record to the cluster IP address. This will setup the ingress rules
# for all services as subdomains and configure SSL using Lets Encrypt.
#
# If you specify `LoadBalancer` as the service type, if you also specify
# an `AWS_SSL_ARN` that is a wildcart certificate, that will be configured
# as the SSL certificate for your services. Else, you will need to configure
# SSL separately. 
serviceType: NodePort


# Domain that is pointed to the clusterIP
# You will need to create an A record like *.osmseed.example.com pointed to the ClusterIP
# Then, the cluster configuration will setup services at their respective subdomains:
# - web.osmseed.example.com
# - overpass.osmseed.example.com
# - nominatim.osmseed.example.com
# - etc.
domain: osmseed.example.com

# ====================================================================================================
# Configuration for Lets Encrypt setup
# ====================================================================================================

# Admin Email address used when generating Lets Encrypt certificates.
# You will be notified of expirations, etc. on this email address.
adminEmail: admin@example.com

# ====================================================================================================
# ====================================================================================================
# ==================================Pods Configurations===============================================
# ====================================================================================================
# ====================================================================================================

# ====================================================================================================
# Variables for osm-seed database
# ====================================================================================================
db:
  enabled: true
  image:
    name: ''
    tag: ''
  env:
    POSTGRES_DB: openstreetmap
    POSTGRES_USER: postgres
    POSTGRES_PASSWORD: '1234'
  persistenceDisk:
    enabled: false
    mountPath: /var/lib/postgresql/data
    subPath: postgresql-db
    # Minikube
    localVolumeHostPath: /mnt/db-data
    localVolumeSize: 10Gi
    # AWS
    AWS_ElasticBlockStore_volumeID: vol-1234bcd
    AWS_ElasticBlockStore_size: 500Gi
    # GCP
    GCP_gcePersistentDisk_pdName: osmseed-disk-db-v1
    GCP_gcePersistentDisk_size: 50Gi
    # Azure
    AZURE_diskName: osmseed-api-db-v1
    AZURE_diskURI: /subscriptions/../../providers/Microsoft.Compute/disks/osmseed-api-db-v1
    AZURE_diskSize: 20Gi
  resources:
    enabled: false
    requests:
      memory: '1Gi'
      cpu: '1'
    limits:
      memory: '2Gi'
      cpu: '1'
  nodeSelector:
    enabled: false

# ====================================================================================================
# Variables for osm-seed website
# ====================================================================================================
web:
  enabled: true
  image:
    name: ''
    tag: ''
  replicaCount: 1
  serviceAnnotations: {}
  env:
    MAILER_ADDRESS: smtp.gmail.com
    MAILER_DOMAIN: gmail.com
    MAILER_USERNAME: example@gmail.com
    MAILER_PASSWORD: '1234'
    MAILER_FROM: no-reply@example.com
    MAILER_PORT: 25
    NOMINATIM_URL: 'nominatim'
    OVERPASS_URL: 'overpassApi'
    OAUTH_CLIENT_ID: 'abcd' # Create client ID and key as OAuth2 Application
    OAUTH_KEY: 'xyz'
  resources:
    enabled: false
    requests:
      memory: '1Gi'
      cpu: '2'
    limits:
      memory: '2Gi'
      cpu: '2'
  nodeSelector:
    enabled: false
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 3
    cpuUtilization: 80

# ====================================================================================================
# Variables for memcached. Memcached is used to store session cookies
# ====================================================================================================
memcached:
  enabled: false
  nodeSelector:
    enabled: false
    label_key: nodegroup_type
    label_value: web
  resources:
    enabled: false
    requests:
      memory: '8Gi'
      cpu: '2'
    limits:
      memory: '8Gi'
      cpu: '2'

# ====================================================================================================
# Variables for id-editor
# ====================================================================================================
idEditor:
  enabled: false

# ====================================================================================================
# Variables for full-history container
# ====================================================================================================
fullHistory:
  enabled: false
  image:
    name: ''
    tag: ''
  nodeSelector:
    enabled: false
    label_key: nodegroup-type
    label_value: ohm-non-tiler
  schedule: '* * * * *'
  env:
    OVERWRITE_FHISTORY_FILE: false
  resources:
    enabled: false
    requests:
      memory: "14Gi"
      cpu: "4"
    limits:
      memory: "16Gi"
      cpu: "4"

# ====================================================================================================
# Variables for osm-seed database backup and restore
# ====================================================================================================
dbBackupRestore:
  enabled: false
  image:
    name: ''
    tag: ''
  schedule: '* * * * *'
  env:
    DB_ACTION: backup
  resources:
    enabled: false
    requests:
      memory: '300Mi'
      cpu: '0.5'
    limits:
      memory: '400Mi'
      cpu: '0.6'
  nodeSelector:
    enabled: false

# ====================================================================================================
# Variables for osm-seed for osmosis, this configuration os to get the planet dump files from apidb
# ====================================================================================================
planetDump:
  enabled: false
  image:
    name: ''
    tag: ''
  schedule: '* * * * *'
  env:
    OVERWRITE_PLANET_FILE: false
  resources:
    enabled: false
    requests:
      memory: '14Gi'
      cpu: '4'
    limits:
      memory: '16Gi'
      cpu: '4'
  nodeSelector:
    enabled: false

# ====================================================================================================
# Variables for replication-job, Configuration to create the replication files by, minute, hour, or day
# ====================================================================================================
replicationJob:
  enabled: false
  image:
    name: ''
    tag: ''
  resources:
    enabled: false
    requests:
      memory: '20Gi'
      cpu: '8'
    limits:
      memory: '24Gi'
      cpu: '10'
  nodeSelector:
    enabled: false

# ====================================================================================================
# Variables for osm-seed to pupulate the apidb
# ====================================================================================================
populateApidb:
  enabled: false
  image:
    name: ''
    tag: ''
  env:
    URL_FILE_TO_IMPORT: 'http://download.geofabrik.de/europe/monaco-latest.osm.pbf'
  resources:
    enabled: false
    requests:
      memory: '1Gi'
      cpu: '2'
    limits:
      memory: '2Gi'
      cpu: '2.5'

# ====================================================================================================
# Variables to start a pod to process osm files
# ====================================================================================================
osmProcessor:
  enabled: false
  image:
    name: ''
    tag: ''
  env:
    URL_FILE_TO_PROCESS: 'http://download.geofabrik.de/europe/monaco-latest.osm.pbf'
    OSM_FILE_ACTION: simple_pbf
  resources:
    enabled: false
    requests:
      memory: '14Gi'
      cpu: '4'
    limits:
      memory: '16Gi'
      cpu: '4'

# ====================================================================================================
# Variables for tiler-db
# ====================================================================================================
tilerDb:
  enabled: false
  image:
    name: ''
    tag: ''
  env:
    POSTGRES_HOST: tiler-db
    POSTGRES_DB: tiler-osm
    POSTGRES_USER: postgres
    POSTGRES_PASSWORD: '1234'
    POSTGRES_PORT: 5432
    POSTGRES_DB_MAX_CONNECTIONS: 100
    POSTGRES_DB_SHARED_BUFFERS: 128MB
    POSTGRES_DB_WORK_MEM: 4MB
    POSTGRES_DB_MAINTENANCE_WORK_MEM: 64MB
    POSTGRES_DB_EFFECTIVE_CACHE_SIZE: 4GB
  persistenceDisk:
    enabled: false
    accessMode: ReadWriteOnce
    mountPath: /var/lib/postgresql/data
    subPath: postgresql-d
    # Minikube
    localVolumeHostPath: /mnt/tiler-db-data
    localVolumeSize: 10Gi
    # AWS
    AWS_ElasticBlockStore_volumeID: vol-1234bcd
    AWS_ElasticBlockStore_size: 50Gi
    # GCP
    GCP_gcePersistentDisk_pdName: osmseed-disk-tilerdb-v1
    GCP_gcePersistentDisk_size: 50Gi
  resources:
    enabled: false
    requests:
      memory: '1Gi'
      cpu: '2'
    limits:
      memory: '2Gi'
      cpu: '2.5'
  nodeSelector:
    enabled: false
    label_key: nodegroup_type
    label_value: tiler

# ====================================================================================================
# Variables for tiler-imposm
# ====================================================================================================
tilerImposm:
  enabled: false
  image:
    name: ''
    tag: ''
  env:
    TILER_IMPORT_FROM: osm
    TILER_IMPORT_PBF_URL: http://download.geofabrik.de/europe/monaco-latest.osm.pbf
    TILER_IMPORT_LIMIT: https://gist.githubusercontent.com/Rub21/96bdcac5eb11f0b36ba8d0352ac537f4/raw/2606f2e207d4a0d895897a83efa1efacefd36eb4/monaco.geojson
  persistenceDisk:
    enabled: false
    accessMode: ReadWriteOnce
    mountPath: /mnt/data
    # Minikube
    localVolumeHostPath: /mnt/tiler-imposm-data
    localVolumeSize: 10Gi
    # AWS
    AWS_ElasticBlockStore_volumeID: vol-1234bcd
    AWS_ElasticBlockStore_size: 50Gi
    # GCP
    GCP_gcePersistentDisk_pdName: osmseed-disk-imposm-v1
    GCP_gcePersistentDisk_size: 50Gi
  resources:
    enabled: false
    requests:
      memory: '20Gi'
      cpu: '8'
    limits:
      memory: '24Gi'
      cpu: '10'
  nodeSelector:
    enabled: false
    label_key: nodegroup_type
    label_value: tiler
# ====================================================================================================
# Variables for tiler-server
# ====================================================================================================
tilerServer:
  enabled: false
  image:
    name: ''
    tag: ''
  replicaCount: 1
  serviceAnnotations: {}
  env:
    TILER_SERVER_PORT: 9090
    TILER_CACHE_TYPE: s3 #In case TILER_CACHE_TYPE=s3, the kubernetes teemplate will come up with a deployment pod
    TILER_CACHE_BASEPATH: /mnt/data
    TILER_CACHE_MAX_ZOOM: 22
    # in case s3
    TILER_CACHE_BUCKET: osmseed-tiler
    TILER_CACHE_REGION: us-east-1
    TILER_CACHE_AWS_ACCESS_KEY_ID: xyz
    TILER_CACHE_AWS_SECRET_ACCESS_KEY: xyz/q
  command: './start.sh' # ./start.sh & ./tile_cache_downloader.sh & ./expire-watcher.sh
  # In case you use TILER_CACHE_TYPE: file with  persistenceDisk
  persistenceDisk:
    enabled: false
    accessMode: ReadWriteOnce
    mountPath: /mnt/data
    # Minikube
    localVolumeHostPath: /mnt/tiler-server-data
    localVolumeSize: 10Gi
    # AWS
    AWS_ElasticBlockStore_volumeID: vol-1234bcd
    AWS_ElasticBlockStore_size: 50Gi
    # GCP
    GCP_gcePersistentDisk_pdName: osmseed-disk-db-v1
    GCP_gcePersistentDisk_size: 50Gi
  resources:
    enabled: false
    requests:
      memory: '1Gi'
      cpu: '2'
    limits:
      memory: '2Gi'
      cpu: '2'
  nodeSelector:
    enabled: false
    label_key: nodegroup_type
    label_value: tiler
# ====================================================================================================
# Variables for tiler-server cache cleaner, only avaliable in case the TILER_CACHE_TYPE = s3  
# ====================================================================================================
tilerServerCacheCleaner:
  enabled: false
  replicaCount: 1
  command: './tile_cache_downloader.sh & ./expire-watcher.sh'
  resources:
    enabled: false
    requests:
      memory: '1Gi'
      cpu: '2'
    limits:
      memory: '2Gi'
      cpu: '2'
  env:
    KILL_PROCESS: manually
    MAX_NUM_PS: 3
    PROCESS_NAME: tegola
  nodeSelector:
    enabled: false
    label_key: nodegroup_type
    label_value: tiler
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 2
    cpuUtilization: 60
# ====================================================================================================
# Variables for tiler-visor
# ====================================================================================================
tilerVisor:
  enabled: false
  image:
    name: ''
    tag: ''
  serviceAnnotations: {}
  replicaCount: 1
  env:
    TILER_VISOR_PROTOCOL: http
    TILER_VISOR_PORT: 8081
  resources:
    enabled: false
    requests:
      memory: '1Gi'
      cpu: '2'
    limits:
      memory: '2Gi'
      cpu: '2'
  nodeSelector:
    enabled: false
    label_key: nodegroup_type
    label_value: tiler
# ====================================================================================================
# Variables for Tasking Manager API
# ====================================================================================================

tmApi:
  enabled: false
  image:
    name: ''
    tag: ''
  nodeSelector:
    enabled: false
  replicaCount: 1
  serviceAnnotations: {}
  env:
    POSTGRES_HOST: 'tm'
    POSTGRES_DB: 'tm'
    POSTGRES_PASSWORD: 'tm'
    POSTGRES_USER: 'postgres'
    POSTGRES_PORT: 5432
    TM_ORG_NAME: 'OpenStreetMap'
    TM_ORG_CODE: 'OSM'
    TM_ORG_URL: 'openstreetmap.org'
    TM_ORG_PRIVACY_POLICY_URL: 'openstreetmap.org/copyright'
    TM_ORG_GITHUB: 'github.com/openstreetmap'
    OSM_SERVER_URL: 'https://openstreetmap.org'
    OSM_NOMINATIM_SERVER_URL: 'https://nominatim.openstreetmap.org'
    OSM_REGISTER_URL: 'https://openstreetmap.org/user/new'
    ID_EDITOR_URL: 'https://openstreetmap.org/edit?editor=id'
    POTLATCH2_EDITOR_URL: 'https://openstreetmap.org/edit?editor=potlatch2'
    TM_SECRET: 's0m3l0ngr4nd0mstr1ng-b3cr34tiv3'
    TM_CONSUMER_KEY: 'example'
    TM_CONSUMER_SECRET: 'example'
    TM_EMAIL_FROM_ADDRESS: 'no-reply@openstreetmap.org'
    TM_SMTP_HOST: 'email-smtp.us-east-1.amazonaws.com'
    TM_SMTP_PORT: 25
    TM_SMTP_USER: ''
    TM_SMTP_PASSWORD: ''
    TM_DEFAULT_LOCALE: 'en'
    TM_APP_API_URL: ''
    TM_APP_BASE_URL: ''
  resources:
    enabled: false
    requests:
      memory: '1Gi'
      cpu: '2'
    limits:
      memory: '2Gi'
      cpu: '2'


# ====================================================================================================
# Variables for nominatim api
# ====================================================================================================
nominatimApi:
  enabled: true
  image:
    name: ''
    tag: ''
  serviceAnnotations: {}
  replicaCount: 1
  env:
    PBF_URL: http://download.geofabrik.de/europe/monaco-latest.osm.pbf
    REPLICATION_URL: http://download.geofabrik.de/europe/monaco-updates
    REPLICATION_UPDATE_INTERVAL: 86400
    REPLICATION_RECHECK_INTERVAL: 900
    FREEZE: false
    IMPORT_WIKIPEDIA: false
    IMPORT_US_POSTCODES: false
    IMPORT_GB_POSTCODES: false
    IMPORT_TIGER_ADDRESSES: false
    THREADS: 4
    NOMINATIM_PASSWORD: psw1234
    PGDATA: /var/lib/postgresql/14/main
    NOMINATIM_ADDRESS_LEVEL_CONFIG_URL: https://gist.githubusercontent.com/lonvia/8502c61b3dd159e67eb8be8368d864c1/raw/d05a1d681230632bb2e35cbf363f2baec8acd657/address-levels.json
    UPDATE_MODE: continuous #Options: `continuous`/`once`/`catch-up`/`none` (default: `none`)
    OSMSEED_WEB_API_DOMAIN: www.openstreetmap.org
  resources:
    enabled: false
    requests:
      memory: '1Gi'
      cpu: '2'
    limits:
      memory: '2Gi'
      cpu: '2'
  persistenceDisk:
    enabled: true
    accessMode: ReadWriteOnce
    mountPath: /var/lib/postgresql/14/main
    subPath: nominatim-pgdata
    # Minikube
    localVolumeHostPath: /mnt/nominatim-db-data
    localVolumeSize: 10Gi
    # AWS
    AWS_ElasticBlockStore_volumeID: vol-0403ccb65fb4a85e9
    AWS_ElasticBlockStore_size: 100Gi
    # GCP
    GCP_gcePersistentDisk_pdName: osmseed-disk-nominatim_db-v1
    GCP_gcePersistentDisk_size: 50Gi
  nodeSelector:
    enabled: false

# ====================================================================================================
# Variables for overpass-api
# ====================================================================================================
overpassApi:
  enabled: false
  image:
    name: ''
    tag: ''
  serviceAnnotations: {}
  env:
    OVERPASS_META: 'yes'
    OVERPASS_MODE: init
    OVERPASS_PLANET_URL: http://download.geofabrik.de/europe/monaco-latest.osm.bz2
    OVERPASS_DIFF_URL: http://download.openstreetmap.fr/replication/europe/monaco/minute/
    OVERPASS_RULES_LOAD: 10
    #OVERPASS_PLANET_PREPROCESS: 'mv /db/planet.osm.bz2 /db/planet.osm.pbf && osmium cat -o /db/planet.osm.bz2 /db/planet.osm.pbf && rm /db/planet.osm.pbf' # it is in case we pass planet files as PBF file uncommment this line
    OVERPASS_PLANET_PREPROCESS: 'ls'
    OVERPASS_REPLICATION_SEQUENCE_NUMBER: 5201000
  persistenceDisk:
    enabled: false
    accessMode: ReadWriteOnce
    mountPath: /db
    # Minikube
    localVolumeHostPath: /mnt/overpass-api-db-data
    localVolumeSize: 10Gi
    # AWS
    AWS_ElasticBlockStore_volumeID: vol-1234bcd
    AWS_ElasticBlockStore_size: 50Gi
    # GCP
    GCP_gcePersistentDisk_pdName: osmseed-disk-overpass-v1
    GCP_gcePersistentDisk_size: 50Gi
  resources:
    enabled: false
    requests:
      memory: '1Gi'
      cpu: '2'
    limits:
      memory: '2Gi'
      cpu: '2'
  nodeSelector:
    enabled: false
# ====================================================================================================
# Variables for taginfo
# ====================================================================================================
taginfo:
  enabled: false
  image:
    name: ''
    tag: ''
  serviceAnnotations: {}
  env:
    URL_PLANET_FILE_STATE: https://planet.osm.org/pbf/state.txt
    URL_HISTORY_PLANET_FILE_STATE: https://planet.osm.org/pbf/full-history/state.txt
    URL_PLANET_FILE: https://planet.osm.org/pbf/planet-latest.osm.pbf
    URL_HISTORY_PLANET_FILE: https://planet.osm.org/pbf/full-history/history-latest.osm.pbf
    TIME_UPDATE_INTERVAL: 24h
    INSTANCE_NAME: OHM Taginfo
    INSTANCE_DESCRIPTION: "This is a <b>taginfo test instance</b>"
    INSTANCE_ICON: /img/logo/world.png
    INSTANCE_CONTACT: Anonymous
    TAGINFO_PROJECT_REPO: https://github.com/taginfo/taginfo-projects.git
    DOWNLOAD_DB: 'languages wiki'
    CREATE_DB: 'db projects chronology'
  resources:
    enabled: false
    requests:
      memory: '1Gi'
      cpu: '2'
    limits:
      memory: '2Gi'
      cpu: '2'
  nodeSelector:
    enabled: false
# ====================================================================================================
# Variables for osm-simple-metrics
# ====================================================================================================
osmSimpleMetrics:
  enabled: false
  image:
    name: ''
    tag: ''
  schedule: '* */1 * * *'
  resources:
    enabled: false
    requests:
      memory: '1Gi'
      cpu: '2'
    limits:
      memory: '2Gi'
      cpu: '2'
  nodeSelector:
    enabled: false

# ====================================================================================================
# Variables for osm-simple-metrics
# ====================================================================================================
monitoringReplication:
  enabled: false
  image:
    name: 'developmentseed/osmseed-replication-job'
    tag: '0.1.0-n770.hd15c9f2'
  schedule: '* */1 * * *'
  env:
    CREATE_MISSING_FILES: empty
    REPLICATION_SEQUENCE_NUMBER: "109789"
  resources:
    enabled: false
    requests:
      memory: '1Gi'
      cpu: '2'
    limits:
      memory: '2Gi'
      cpu: '2'
  nodeSelector:
    enabled: false
